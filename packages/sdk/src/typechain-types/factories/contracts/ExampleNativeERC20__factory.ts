/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ExampleNativeERC20,
  ExampleNativeERC20Interface,
} from "../../contracts/ExampleNativeERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenFactoryAddress",
        type: "string",
      },
      {
        internalType: "string",
        name: "_subdenom",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_tokenDecimals",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "AuthzPrecompile",
    outputs: [
      {
        internalType: "contract IAuthz",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BankPrecompile",
    outputs: [
      {
        internalType: "contract IBank",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "JsonPrecompile",
    outputs: [
      {
        internalType: "contract IJson",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WasmdPrecompile",
    outputs: [
      {
        internalType: "contract IWasmd",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fulldenom",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenFactoryAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161222d38038061222d8339818101604052810190610032919061039c565b8484848484739000000000000000000000000000000000000001600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507390000000000000000000000000000000000000026000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739000000000000000000000000000000000000004600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739000000000000000000000000000000000000005600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848460405160200161019d929190610566565b604051602081830303815290604052600590816101ba91906107ac565b5082600690816101ca91906107ac565b5081600790816101da91906107ac565b50806008819055505050505050505050505061087e565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102588261020f565b810181811067ffffffffffffffff8211171561027757610276610220565b5b80604052505050565b600061028a6101f1565b9050610296828261024f565b919050565b600067ffffffffffffffff8211156102b6576102b5610220565b5b6102bf8261020f565b9050602081019050919050565b60005b838110156102ea5780820151818401526020810190506102cf565b60008484015250505050565b60006103096103048461029b565b610280565b9050828152602081018484840111156103255761032461020a565b5b6103308482856102cc565b509392505050565b600082601f83011261034d5761034c610205565b5b815161035d8482602086016102f6565b91505092915050565b6000819050919050565b61037981610366565b811461038457600080fd5b50565b60008151905061039681610370565b92915050565b600080600080600060a086880312156103b8576103b76101fb565b5b600086015167ffffffffffffffff8111156103d6576103d5610200565b5b6103e288828901610338565b955050602086015167ffffffffffffffff81111561040357610402610200565b5b61040f88828901610338565b945050604086015167ffffffffffffffff8111156104305761042f610200565b5b61043c88828901610338565b935050606086015167ffffffffffffffff81111561045d5761045c610200565b5b61046988828901610338565b925050608061047a88828901610387565b9150509295509295909350565b600081905092915050565b7f666163746f72792f000000000000000000000000000000000000000000000000600082015250565b60006104c8600883610487565b91506104d382610492565b600882019050919050565b600081519050919050565b60006104f4826104de565b6104fe8185610487565b935061050e8185602086016102cc565b80840191505092915050565b7f2f00000000000000000000000000000000000000000000000000000000000000600082015250565b6000610550600183610487565b915061055b8261051a565b600182019050919050565b6000610571826104bb565b915061057d82856104e9565b915061058882610543565b915061059482846104e9565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105e757607f821691505b6020821081036105fa576105f96105a0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026106627fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610625565b61066c8683610625565b95508019841693508086168417925050509392505050565b6000819050919050565b60006106a96106a461069f84610366565b610684565b610366565b9050919050565b6000819050919050565b6106c38361068e565b6106d76106cf826106b0565b848454610632565b825550505050565b600090565b6106ec6106df565b6106f78184846106ba565b505050565b5b8181101561071b576107106000826106e4565b6001810190506106fd565b5050565b601f8211156107605761073181610600565b61073a84610615565b81016020851015610749578190505b61075d61075585610615565b8301826106fc565b50505b505050565b600082821c905092915050565b600061078360001984600802610765565b1980831691505092915050565b600061079c8383610772565b9150826002028217905092915050565b6107b5826104de565b67ffffffffffffffff8111156107ce576107cd610220565b5b6107d882546105cf565b6107e382828561071f565b600060209050601f8311600181146108165760008415610804578287015190505b61080e8582610790565b865550610876565b601f19841661082486610600565b60005b8281101561084c57848901518255600182019150602085019450602081019050610827565b868310156108695784890151610865601f891682610772565b8355505b6001600288020188555050505b505050505050565b6119a08061088d6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063d47347af11610066578063d47347af1461028c578063dd62ed3e146102aa578063de4725cc146102da578063f00b0255146102f8576100f5565b806370a08231146101f057806395d89b4114610220578063a9059cbb1461023e578063be19f0a71461026e576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce56714610196578063566732c1146101b457806369a00ee2146101d2576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610316565b60405161010f9190610f87565b60405180910390f35b610132600480360381019061012d9190611042565b6103a8565b60405161013f919061109d565b60405180910390f35b61015061064e565b60405161015d91906110c7565b60405180910390f35b610180600480360381019061017b91906110e2565b6106f2565b60405161018d919061109d565b60405180910390f35b61019e6108ef565b6040516101ab91906110c7565b60405180910390f35b6101bc6108f9565b6040516101c99190611194565b60405180910390f35b6101da61091f565b6040516101e791906111d0565b60405180910390f35b61020a600480360381019061020591906111eb565b610945565b60405161021791906110c7565b60405180910390f35b610228610a5b565b6040516102359190610f87565b60405180910390f35b61025860048036038101906102539190611042565b610aed565b604051610265919061109d565b60405180910390f35b610276610c78565b6040516102839190610f87565b60405180910390f35b610294610d06565b6040516102a19190610f87565b60405180910390f35b6102c460048036038101906102bf9190611218565b610d94565b6040516102d191906110c7565b60405180910390f35b6102e2610ead565b6040516102ef9190611279565b60405180910390f35b610300610ed1565b60405161030d91906112b5565b60405180910390f35b606060068054610325906112ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610351906112ff565b801561039e5780601f106103735761010080835404028352916020019161039e565b820191906000526020600020905b81548152906001019060200180831161038157829003601f168201915b5050505050905090565b600080339050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361041d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610414906113a2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361048c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048390611434565b60405180910390fd5b600073900000000000000000000000000000000000000573ffffffffffffffffffffffffffffffffffffffff16856005866040516024016104cf939291906114fc565b6040516020818303038152906040527f6eccd1b7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516105599190611581565b600060405180830381855af49150503d8060008114610594576040519150601f19603f3d011682016040523d82523d6000602084013e610599565b606091505b50509050806105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d4906115e4565b60405180910390fd5b8473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258660405161063a91906110c7565b60405180910390a360019250505092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636923a1fd60056040518263ffffffff1660e01b81526004016106ac9190611604565b602060405180830381865afa1580156106c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ed919061163b565b905090565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610762576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610759906116da565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c89061176c565b60405180910390fd5b600073900000000000000000000000000000000000000573ffffffffffffffffffffffffffffffffffffffff168585600586604051602401610816949392919061178c565b6040516020818303038152906040527fb18011a0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516108a09190611581565b600060405180830381855af49150503d80600081146108db576040519150601f19603f3d011682016040523d82523d6000602084013e6108e0565b606091505b50509050809150509392505050565b6000600854905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ac9061184a565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166316cadeab8360056040518363ffffffff1660e01b8152600401610a1392919061186a565b602060405180830381865afa158015610a30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a54919061163b565b9050919050565b606060078054610a6a906112ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610a96906112ff565b8015610ae35780601f10610ab857610100808354040283529160200191610ae3565b820191906000526020600020905b815481529060010190602001808311610ac657829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b549061176c565b60405180910390fd5b600073900000000000000000000000000000000000000473ffffffffffffffffffffffffffffffffffffffff1684600585604051602401610ba0939291906114fc565b6040516020818303038152906040527fa8990b8c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610c2a9190611581565b600060405180830381855af49150503d8060008114610c65576040519150601f19603f3d011682016040523d82523d6000602084013e610c6a565b606091505b505090508091505092915050565b60048054610c85906112ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb1906112ff565b8015610cfe5780601f10610cd357610100808354040283529160200191610cfe565b820191906000526020600020905b815481529060010190602001808311610ce157829003601f168201915b505050505081565b60058054610d13906112ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610d3f906112ff565b8015610d8c5780601f10610d6157610100808354040283529160200191610d8c565b820191906000526020600020905b815481529060010190602001808311610d6f57829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dfb9061190c565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634248ca21848460056040518463ffffffff1660e01b8152600401610e649392919061192c565b602060405180830381865afa158015610e81573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea5919061163b565b905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f31578082015181840152602081019050610f16565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f5982610ef7565b610f638185610f02565b9350610f73818560208601610f13565b610f7c81610f3d565b840191505092915050565b60006020820190508181036000830152610fa18184610f4e565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fd982610fae565b9050919050565b610fe981610fce565b8114610ff457600080fd5b50565b60008135905061100681610fe0565b92915050565b6000819050919050565b61101f8161100c565b811461102a57600080fd5b50565b60008135905061103c81611016565b92915050565b6000806040838503121561105957611058610fa9565b5b600061106785828601610ff7565b92505060206110788582860161102d565b9150509250929050565b60008115159050919050565b61109781611082565b82525050565b60006020820190506110b2600083018461108e565b92915050565b6110c18161100c565b82525050565b60006020820190506110dc60008301846110b8565b92915050565b6000806000606084860312156110fb576110fa610fa9565b5b600061110986828701610ff7565b935050602061111a86828701610ff7565b925050604061112b8682870161102d565b9150509250925092565b6000819050919050565b600061115a61115561115084610fae565b611135565b610fae565b9050919050565b600061116c8261113f565b9050919050565b600061117e82611161565b9050919050565b61118e81611173565b82525050565b60006020820190506111a96000830184611185565b92915050565b60006111ba82611161565b9050919050565b6111ca816111af565b82525050565b60006020820190506111e560008301846111c1565b92915050565b60006020828403121561120157611200610fa9565b5b600061120f84828501610ff7565b91505092915050565b6000806040838503121561122f5761122e610fa9565b5b600061123d85828601610ff7565b925050602061124e85828601610ff7565b9150509250929050565b600061126382611161565b9050919050565b61127381611258565b82525050565b600060208201905061128e600083018461126a565b92915050565b600061129f82611161565b9050919050565b6112af81611294565b82525050565b60006020820190506112ca60008301846112a6565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061131757607f821691505b60208210810361132a576113296112d0565b5b50919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061138c602483610f02565b915061139782611330565b604082019050919050565b600060208201905081810360008301526113bb8161137f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061141e602283610f02565b9150611429826113c2565b604082019050919050565b6000602082019050818103600083015261144d81611411565b9050919050565b61145d81610fce565b82525050565b60008190508160005260206000209050919050565b60008154611485816112ff565b61148f8186610f02565b945060018216600081146114aa57600181146114c0576114f3565b60ff1983168652811515602002860193506114f3565b6114c985611463565b60005b838110156114eb578154818901526001820191506020810190506114cc565b808801955050505b50505092915050565b60006060820190506115116000830186611454565b81810360208301526115238185611478565b905061153260408301846110b8565b949350505050565b600081519050919050565b600081905092915050565b600061155b8261153a565b6115658185611545565b9350611575818560208601610f13565b80840191505092915050565b600061158d8284611550565b915081905092915050565b7f45524332303a20617070726f7665206661696c65640000000000000000000000600082015250565b60006115ce601583610f02565b91506115d982611598565b602082019050919050565b600060208201905081810360008301526115fd816115c1565b9050919050565b6000602082019050818103600083015261161e8184611478565b905092915050565b60008151905061163581611016565b92915050565b60006020828403121561165157611650610fa9565b5b600061165f84828501611626565b91505092915050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006116c4602583610f02565b91506116cf82611668565b604082019050919050565b600060208201905081810360008301526116f3816116b7565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611756602383610f02565b9150611761826116fa565b604082019050919050565b6000602082019050818103600083015261178581611749565b9050919050565b60006080820190506117a16000830187611454565b6117ae6020830186611454565b81810360408301526117c08185611478565b90506117cf60608301846110b8565b95945050505050565b7f45524332303a2062616c616e636520717565727920666f7220746865207a657260008201527f6f20616464726573730000000000000000000000000000000000000000000000602082015250565b6000611834602983610f02565b915061183f826117d8565b604082019050919050565b6000602082019050818103600083015261186381611827565b9050919050565b600060408201905061187f6000830185611454565b81810360208301526118918184611478565b90509392505050565b7f45524332303a20616c6c6f77616e636520717565727920666f7220746865207a60008201527f65726f2061646472657373000000000000000000000000000000000000000000602082015250565b60006118f6602b83610f02565b91506119018261189a565b604082019050919050565b60006020820190508181036000830152611925816118e9565b9050919050565b60006060820190506119416000830186611454565b61194e6020830185611454565b81810360408301526119608184611478565b905094935050505056fea26469706673582212201ef8c940747ae6b03a57b8154fa5bb86a2fb8ef5e66acd01dace88f27a00132b64736f6c634300081c0033";

type ExampleNativeERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleNativeERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleNativeERC20__factory extends ContractFactory {
  constructor(...args: ExampleNativeERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenFactoryAddress: string,
    _subdenom: string,
    _tokenName: string,
    _tokenSymbol: string,
    _tokenDecimals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _tokenFactoryAddress,
      _subdenom,
      _tokenName,
      _tokenSymbol,
      _tokenDecimals,
      overrides || {}
    );
  }
  override deploy(
    _tokenFactoryAddress: string,
    _subdenom: string,
    _tokenName: string,
    _tokenSymbol: string,
    _tokenDecimals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _tokenFactoryAddress,
      _subdenom,
      _tokenName,
      _tokenSymbol,
      _tokenDecimals,
      overrides || {}
    ) as Promise<
      ExampleNativeERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ExampleNativeERC20__factory {
    return super.connect(runner) as ExampleNativeERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleNativeERC20Interface {
    return new Interface(_abi) as ExampleNativeERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ExampleNativeERC20 {
    return new Contract(address, _abi, runner) as unknown as ExampleNativeERC20;
  }
}
