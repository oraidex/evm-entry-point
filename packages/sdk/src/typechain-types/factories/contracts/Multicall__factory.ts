/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Multicall, MulticallInterface } from "../../contracts/Multicall";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct Multicall.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "aggregate",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "returnData",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentBlockTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061054f8061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630f28c97d14610051578063252dba421461006657806327e86d6e1461008757806342cbb15c1461008f575b600080fd5b425b6040519081526020015b60405180910390f35b6100796100743660046102a1565b610095565b60405161005d929190610462565b61005361021e565b43610053565b8051439060609067ffffffffffffffff8111156100b4576100b4610231565b6040519080825280602002602001820160405280156100e757816020015b60608152602001906001900390816100d25790505b50905060005b83518110156102185760008085838151811061010b5761010b6104e9565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1686848151811061013f5761013f6104e9565b60200260200101516020015160405161015891906104ff565b6000604051808303816000865af19150503d8060008114610195576040519150601f19603f3d011682016040523d82523d6000602084013e61019a565b606091505b5091509150816101f05760405162461bcd60e51b815260206004820152601660248201527f4d756c746963616c6c3a2063616c6c206661696c656400000000000000000000604482015260640160405180910390fd5b80848481518110610203576102036104e9565b602090810291909101015250506001016100ed565b50915091565b600061022b60014361051b565b40905090565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561026a5761026a610231565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561029957610299610231565b604052919050565b6000602082840312156102b357600080fd5b813567ffffffffffffffff8111156102ca57600080fd5b8201601f810184136102db57600080fd5b803567ffffffffffffffff8111156102f5576102f5610231565b8060051b61030560208201610270565b9182526020818401810192908101908784111561032157600080fd5b6020850192505b8383101561043357823567ffffffffffffffff81111561034757600080fd5b85016040818a03601f1901121561035d57600080fd5b610365610247565b602082013573ffffffffffffffffffffffffffffffffffffffff8116811461038c57600080fd5b8152604082013567ffffffffffffffff8111156103a857600080fd5b60208184010192505089601f8301126103c057600080fd5b813567ffffffffffffffff8111156103da576103da610231565b6103ed601f8201601f1916602001610270565b8181528b602083860101111561040257600080fd5b8160208501602083013760006020838301015280602084015250508084525050602082019150602083019250610328565b979650505050505050565b60005b83811015610459578181015183820152602001610441565b50506000910152565b6000604082018483526040602084015280845180835260608501915060608160051b86010192506020860160005b828110156104dc57605f19878603018452815180518087526104b981602089016020850161043e565b601f01601f19169590950160209081019550938401939190910190600101610490565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b6000825161051181846020870161043e565b9190910192915050565b8181038181111561053c57634e487b7160e01b600052601160045260246000fd5b9291505056fea164736f6c634300081c000a";

type MulticallConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MulticallConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Multicall__factory extends ContractFactory {
  constructor(...args: MulticallConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Multicall & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Multicall__factory {
    return super.connect(runner) as Multicall__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MulticallInterface {
    return new Interface(_abi) as MulticallInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Multicall {
    return new Contract(address, _abi, runner) as unknown as Multicall;
  }
}
