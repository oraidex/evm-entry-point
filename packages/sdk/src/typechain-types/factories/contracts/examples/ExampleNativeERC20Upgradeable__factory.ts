/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ExampleNativeERC20Upgradeable,
  ExampleNativeERC20UpgradeableInterface,
} from "../../../contracts/examples/ExampleNativeERC20Upgradeable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "AuthzPrecompile",
    outputs: [
      {
        internalType: "contract IAuthz",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BankPrecompile",
    outputs: [
      {
        internalType: "contract IBank",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "JsonPrecompile",
    outputs: [
      {
        internalType: "contract IJson",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WasmdPrecompile",
    outputs: [
      {
        internalType: "contract IWasmd",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fulldenom",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenFactoryAddress",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_tokenDecimals",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenFactoryAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b60805161186e6100fd60003960008181610dcd01528181610df60152610f5a015261186e6000f3fe6080604052600436106101445760003560e01c806369a00ee2116100c0578063be19f0a711610074578063dd62ed3e11610059578063dd62ed3e14610366578063de4725cc14610386578063f00b0255146103a657600080fd5b8063be19f0a71461033c578063d47347af1461035157600080fd5b806395d89b41116100a557806395d89b41146102be578063a9059cbb146102d3578063ad3cb1cc146102f357600080fd5b806369a00ee21461027e57806370a082311461029e57600080fd5b806323b872dd116101175780634f1ef286116100fc5780634f1ef2861461021e57806352d1902d14610231578063566732c11461024657600080fd5b806323b872dd146101e9578063313ce5671461020957600080fd5b806306fdde0314610149578063095ea7b31461017457806318160ddd146101a45780631c5d2b49146101c7575b600080fd5b34801561015557600080fd5b5061015e6103c6565b60405161016b91906112ce565b60405180910390f35b34801561018057600080fd5b5061019461018f36600461131d565b610458565b604051901515815260200161016b565b3480156101b057600080fd5b506101b961066e565b60405190815260200161016b565b3480156101d357600080fd5b506101e76101e23660046113f7565b6106e6565b005b3480156101f557600080fd5b50610194610204366004611493565b610810565b34801561021557600080fd5b506008546101b9565b6101e761022c3660046114d0565b6109ab565b34801561023d57600080fd5b506101b96109c1565b34801561025257600080fd5b50600154610266906001600160a01b031681565b6040516001600160a01b03909116815260200161016b565b34801561028a57600080fd5b50600354610266906001600160a01b031681565b3480156102aa57600080fd5b506101b96102b9366004611532565b6109f0565b3480156102ca57600080fd5b5061015e610ae8565b3480156102df57600080fd5b506101946102ee36600461131d565b610af7565b3480156102ff57600080fd5b5061015e6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b34801561034857600080fd5b5061015e610c11565b34801561035d57600080fd5b5061015e610c9f565b34801561037257600080fd5b506101b961038136600461154d565b610cac565b34801561039257600080fd5b50600054610266906001600160a01b031681565b3480156103b257600080fd5b50600254610266906001600160a01b031681565b6060600680546103d590611580565b80601f016020809104026020016040519081016040528092919081815260200182805461040190611580565b801561044e5780601f106104235761010080835404028352916020019161044e565b820191906000526020600020905b81548152906001019060200180831161043157829003601f168201915b5050505050905090565b600033806104b95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b03841661051a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104b0565b60007390000000000000000000000000000000000000056001600160a01b0316856005866040516024016105509392919061163d565b60408051601f198184030181529181526020820180516001600160e01b0316636eccd1b760e01b17905251610585919061166f565b600060405180830381855af49150503d80600081146105c0576040519150601f19603f3d011682016040523d82523d6000602084013e6105c5565b606091505b50509050806106165760405162461bcd60e51b815260206004820152601560248201527f45524332303a20617070726f7665206661696c6564000000000000000000000060448201526064016104b0565b846001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258660405161065b91815260200190565b60405180910390a3506001949350505050565b600154604051636923a1fd60e01b81526000916001600160a01b031690636923a1fd906106a09060059060040161168b565b602060405180830381865afa1580156106bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e1919061169e565b905090565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156107315750825b905060008267ffffffffffffffff16600114801561074e5750303b155b90508115801561075c575080155b1561077a5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156107ae57845468ff00000000000000001916680100000000000000001785555b6107ba89898989610da0565b831561080557845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b60006001600160a01b03841661088e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016104b0565b6001600160a01b0383166108f05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104b0565b60007390000000000000000000000000000000000000056001600160a01b0316858560058660405160240161092894939291906116b7565b60408051601f198184030181529181526020820180516001600160e01b031663058c008d60e51b1790525161095d919061166f565b600060405180830381855af49150503d8060008114610998576040519150601f19603f3d011682016040523d82523d6000602084013e61099d565b606091505b5090925050505b9392505050565b6109b3610dc2565b6109bd8282610e7b565b5050565b60006109cb610f4f565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b60006001600160a01b038216610a6e5760405162461bcd60e51b815260206004820152602960248201527f45524332303a2062616c616e636520717565727920666f7220746865207a657260448201527f6f2061646472657373000000000000000000000000000000000000000000000060648201526084016104b0565b6001546040516316cadeab60e01b81526001600160a01b03909116906316cadeab90610aa19085906005906004016116f9565b602060405180830381865afa158015610abe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae2919061169e565b92915050565b6060600780546103d590611580565b60006001600160a01b038316610b5b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104b0565b60007390000000000000000000000000000000000000046001600160a01b031684600585604051602401610b919392919061163d565b60408051601f198184030181529181526020820180516001600160e01b0316632a2642e360e21b17905251610bc6919061166f565b600060405180830381855af49150503d8060008114610c01576040519150601f19603f3d011682016040523d82523d6000602084013e610c06565b606091505b509095945050505050565b60048054610c1e90611580565b80601f0160208091040260200160405190810160405280929190818152602001828054610c4a90611580565b8015610c975780601f10610c6c57610100808354040283529160200191610c97565b820191906000526020600020905b815481529060010190602001808311610c7a57829003601f168201915b505050505081565b60058054610c1e90611580565b60006001600160a01b038316610d2a5760405162461bcd60e51b815260206004820152602b60248201527f45524332303a20616c6c6f77616e636520717565727920666f7220746865207a60448201527f65726f206164647265737300000000000000000000000000000000000000000060648201526084016104b0565b600354604051634248ca2160e01b81526001600160a01b0390911690634248ca2190610d5f9086908690600590600401611723565b602060405180830381865afa158015610d7c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a4919061169e565b610da8610f98565b610db0610fe6565b610dbc84848484610fee565b50505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610e5b57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610e4f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b6001600160a01b031614155b15610e795760405163703e46dd60e11b815260040160405180910390fd5b565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ed5575060408051601f3d908101601f19168201909252610ed29181019061169e565b60015b610efd57604051634c9c8ce360e01b81526001600160a01b03831660048201526024016104b0565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114610f4057604051632a87526960e21b8152600481018290526024016104b0565b610f4a83836110b6565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e795760405163703e46dd60e11b815260040160405180910390fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16610e7957604051631afcd79f60e31b815260040160405180910390fd5b610e79610f98565b610ff6610f98565b6002805473ffffffffffffffffffffffffffffffffffffffff199081167390000000000000000000000000000000000000011790915560008054821673900000000000000000000000000000000000000217905560018054821673900000000000000000000000000000000000000417905560038054909116739000000000000000000000000000000000000005179055600561109385826117a2565b5060066110a084826117a2565b5060076110ad83826117a2565b50600855505050565b6110bf8261110c565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561110457610f4a8282611190565b6109bd611206565b806001600160a01b03163b60000361114257604051634c9c8ce360e01b81526001600160a01b03821660048201526024016104b0565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516111ad919061166f565b600060405180830381855af49150503d80600081146111e8576040519150601f19603f3d011682016040523d82523d6000602084013e6111ed565b606091505b50915091506111fd858383611225565b95945050505050565b3415610e795760405163b398979f60e01b815260040160405180910390fd5b60608261123a5761123582611281565b6109a4565b815115801561125157506001600160a01b0384163b155b1561127a57604051639996b31560e01b81526001600160a01b03851660048201526024016104b0565b50806109a4565b8051156112915780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b60005b838110156112c55781810151838201526020016112ad565b50506000910152565b60208152600082518060208401526112ed8160408501602087016112aa565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461131857600080fd5b919050565b6000806040838503121561133057600080fd5b61133983611301565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff84111561137857611378611347565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff821117156113a7576113a7611347565b6040528381529050808284018510156113bf57600080fd5b83836020830137600060208583010152509392505050565b600082601f8301126113e857600080fd5b6109a48383356020850161135d565b6000806000806080858703121561140d57600080fd5b843567ffffffffffffffff81111561142457600080fd5b611430878288016113d7565b945050602085013567ffffffffffffffff81111561144d57600080fd5b611459878288016113d7565b935050604085013567ffffffffffffffff81111561147657600080fd5b611482878288016113d7565b949793965093946060013593505050565b6000806000606084860312156114a857600080fd5b6114b184611301565b92506114bf60208501611301565b929592945050506040919091013590565b600080604083850312156114e357600080fd5b6114ec83611301565b9150602083013567ffffffffffffffff81111561150857600080fd5b8301601f8101851361151957600080fd5b6115288582356020840161135d565b9150509250929050565b60006020828403121561154457600080fd5b6109a482611301565b6000806040838503121561156057600080fd5b61156983611301565b915061157760208401611301565b90509250929050565b600181811c9082168061159457607f821691505b6020821081036115b457634e487b7160e01b600052602260045260246000fd5b50919050565b600081546115c781611580565b8085526001821680156115e157600181146115fd57611634565b60ff1983166020870152602082151560051b8701019350611634565b84600052602060002060005b8381101561162b5781546020828a010152600182019150602081019050611609565b87016020019450505b50505092915050565b6001600160a01b038416815260606020820152600061165f60608301856115ba565b9050826040830152949350505050565b600082516116818184602087016112aa565b9190910192915050565b6020815260006109a460208301846115ba565b6000602082840312156116b057600080fd5b5051919050565b6001600160a01b03851681526001600160a01b03841660208201526080604082015260006116e860808301856115ba565b905082606083015295945050505050565b6001600160a01b038316815260406020820152600061171b60408301846115ba565b949350505050565b6001600160a01b03841681526001600160a01b03831660208201526060604082015260006111fd60608301846115ba565b601f821115610f4a57806000526020600020601f840160051c8101602085101561177b5750805b601f840160051c820191505b8181101561179b5760008155600101611787565b5050505050565b815167ffffffffffffffff8111156117bc576117bc611347565b6117d0816117ca8454611580565b84611754565b6020601f82116001811461180457600083156117ec5750848201515b600019600385901b1c1916600184901b17845561179b565b600084815260208120601f198516915b828110156118345787850151825560209485019460019092019101611814565b50848210156118525786840151600019600387901b60f8161c191681555b50505050600190811b0190555056fea164736f6c634300081c000a";

type ExampleNativeERC20UpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleNativeERC20UpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleNativeERC20Upgradeable__factory extends ContractFactory {
  constructor(...args: ExampleNativeERC20UpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ExampleNativeERC20Upgradeable & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ExampleNativeERC20Upgradeable__factory {
    return super.connect(runner) as ExampleNativeERC20Upgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleNativeERC20UpgradeableInterface {
    return new Interface(_abi) as ExampleNativeERC20UpgradeableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ExampleNativeERC20Upgradeable {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ExampleNativeERC20Upgradeable;
  }
}
