/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ExampleNativeERC20,
  ExampleNativeERC20Interface,
} from "../../../contracts/examples/ExampleNativeERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_fulldenom",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenName",
        type: "string",
      },
      {
        internalType: "string",
        name: "_tokenSymbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_tokenDecimals",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "AuthzPrecompile",
    outputs: [
      {
        internalType: "contract IAuthz",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BankPrecompile",
    outputs: [
      {
        internalType: "contract IBank",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "JsonPrecompile",
    outputs: [
      {
        internalType: "contract IJson",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WasmdPrecompile",
    outputs: [
      {
        internalType: "contract IWasmd",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fulldenom",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenFactoryAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161115d38038061115d83398101604081905261002f916101a7565b600280546001600160a01b031990811673900000000000000000000000000000000000000117909155600080548216739000000000000000000000000000000000000002179055600180548216739000000000000000000000000000000000000004179055600380549091167390000000000000000000000000000000000000051790558383838360056100c385826102cd565b5060066100d084826102cd565b5060076100dd83826102cd565b506008555061038b95505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261011557600080fd5b81516001600160401b0381111561012e5761012e6100ee565b604051601f8201601f19908116603f011681016001600160401b038111828210171561015c5761015c6100ee565b60405281815283820160200185101561017457600080fd5b60005b8281101561019357602081860181015183830182015201610177565b506000918101602001919091529392505050565b600080600080608085870312156101bd57600080fd5b84516001600160401b038111156101d357600080fd5b6101df87828801610104565b602087015190955090506001600160401b038111156101fd57600080fd5b61020987828801610104565b604087015190945090506001600160401b0381111561022757600080fd5b61023387828801610104565b606096909601519497939650505050565b600181811c9082168061025857607f821691505b60208210810361027857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156102c857806000526020600020601f840160051c810160208510156102a55750805b601f840160051c820191505b818110156102c557600081556001016102b1565b50505b505050565b81516001600160401b038111156102e6576102e66100ee565b6102fa816102f48454610244565b8461027e565b6020601f82116001811461032e57600083156103165750848201515b600019600385901b1c1916600184901b1784556102c5565b600084815260208120601f198516915b8281101561035e578785015182556020948501946001909201910161033e565b508482101561037c5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b610dc38061039a6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063d47347af11610066578063d47347af146101e0578063dd62ed3e146101e8578063de4725cc146101fb578063f00b02551461020e57600080fd5b806370a08231146101aa57806395d89b41146101bd578063a9059cbb146101c5578063be19f0a7146101d857600080fd5b806323b872dd116100d357806323b872dd14610151578063313ce56714610164578063566732c11461016c57806369a00ee21461019757600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610221565b60405161010f9190610ab5565b60405180910390f35b61012b610126366004610b04565b6102b3565b604051901515815260200161010f565b6101436104c9565b60405190815260200161010f565b61012b61015f366004610b2e565b610541565b600854610143565b60015461017f906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b60035461017f906001600160a01b031681565b6101436101b8366004610b6b565b6106da565b6101026107d2565b61012b6101d3366004610b04565b6107e1565b6101026108fb565b610102610989565b6101436101f6366004610b86565b610996565b60005461017f906001600160a01b031681565b60025461017f906001600160a01b031681565b60606006805461023090610bb9565b80601f016020809104026020016040519081016040528092919081815260200182805461025c90610bb9565b80156102a95780601f1061027e576101008083540402835291602001916102a9565b820191906000526020600020905b81548152906001019060200180831161028c57829003601f168201915b5050505050905090565b600033806103145760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b0384166103755760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b60007390000000000000000000000000000000000000056001600160a01b0316856005866040516024016103ab93929190610c96565b60408051601f198184030181529181526020820180516001600160e01b0316636eccd1b760e01b179052516103e09190610cc8565b600060405180830381855af49150503d806000811461041b576040519150601f19603f3d011682016040523d82523d6000602084013e610420565b606091505b50509050806104715760405162461bcd60e51b815260206004820152601560248201527f45524332303a20617070726f7665206661696c65640000000000000000000000604482015260640161030b565b846001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925866040516104b691815260200190565b60405180910390a3506001949350505050565b600154604051636923a1fd60e01b81526000916001600160a01b031690636923a1fd906104fb90600590600401610ce4565b602060405180830381865afa158015610518573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053c9190610cf7565b905090565b60006001600160a01b0384166105bf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161030b565b6001600160a01b0383166106215760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b60007390000000000000000000000000000000000000056001600160a01b031685856005866040516024016106599493929190610d10565b60408051601f198184030181529181526020820180516001600160e01b031663058c008d60e51b1790525161068e9190610cc8565b600060405180830381855af49150503d80600081146106c9576040519150601f19603f3d011682016040523d82523d6000602084013e6106ce565b606091505b50909695505050505050565b60006001600160a01b0382166107585760405162461bcd60e51b815260206004820152602960248201527f45524332303a2062616c616e636520717565727920666f7220746865207a657260448201527f6f20616464726573730000000000000000000000000000000000000000000000606482015260840161030b565b6001546040516316cadeab60e01b81526001600160a01b03909116906316cadeab9061078b908590600590600401610d52565b602060405180830381865afa1580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc9190610cf7565b92915050565b60606007805461023090610bb9565b60006001600160a01b0383166108455760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b60007390000000000000000000000000000000000000046001600160a01b03168460058560405160240161087b93929190610c96565b60408051601f198184030181529181526020820180516001600160e01b0316632a2642e360e21b179052516108b09190610cc8565b600060405180830381855af49150503d80600081146108eb576040519150601f19603f3d011682016040523d82523d6000602084013e6108f0565b606091505b509095945050505050565b6004805461090890610bb9565b80601f016020809104026020016040519081016040528092919081815260200182805461093490610bb9565b80156109815780601f1061095657610100808354040283529160200191610981565b820191906000526020600020905b81548152906001019060200180831161096457829003601f168201915b505050505081565b6005805461090890610bb9565b60006001600160a01b038316610a145760405162461bcd60e51b815260206004820152602b60248201527f45524332303a20616c6c6f77616e636520717565727920666f7220746865207a60448201527f65726f2061646472657373000000000000000000000000000000000000000000606482015260840161030b565b600354604051634248ca2160e01b81526001600160a01b0390911690634248ca2190610a499086908690600590600401610d7c565b602060405180830381865afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a9190610cf7565b9392505050565b60005b83811015610aac578181015183820152602001610a94565b50506000910152565b6020815260008251806020840152610ad4816040850160208701610a91565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610aff57600080fd5b919050565b60008060408385031215610b1757600080fd5b610b2083610ae8565b946020939093013593505050565b600080600060608486031215610b4357600080fd5b610b4c84610ae8565b9250610b5a60208501610ae8565b929592945050506040919091013590565b600060208284031215610b7d57600080fd5b610a8a82610ae8565b60008060408385031215610b9957600080fd5b610ba283610ae8565b9150610bb060208401610ae8565b90509250929050565b600181811c90821680610bcd57607f821691505b602082108103610bed57634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c90821680610c0c57607f821691505b602082108103610c2c57634e487b7160e01b600052602260045260246000fd5b81865260208601818015610c475760018114610c5d57610c8b565b60ff198516825283151560051b82019550610c8b565b60008781526020902060005b85811015610c8557815484820152600190910190602001610c69565b83019650505b505050505092915050565b6001600160a01b0384168152606060208201526000610cb86060830185610bf3565b9050826040830152949350505050565b60008251610cda818460208701610a91565b9190910192915050565b602081526000610a8a6020830184610bf3565b600060208284031215610d0957600080fd5b5051919050565b6001600160a01b03851681526001600160a01b0384166020820152608060408201526000610d416080830185610bf3565b905082606083015295945050505050565b6001600160a01b0383168152604060208201526000610d746040830184610bf3565b949350505050565b6001600160a01b03841681526001600160a01b0383166020820152606060408201526000610dad6060830184610bf3565b9594505050505056fea164736f6c634300081c000a";

type ExampleNativeERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExampleNativeERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExampleNativeERC20__factory extends ContractFactory {
  constructor(...args: ExampleNativeERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _fulldenom: string,
    _tokenName: string,
    _tokenSymbol: string,
    _tokenDecimals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _fulldenom,
      _tokenName,
      _tokenSymbol,
      _tokenDecimals,
      overrides || {}
    );
  }
  override deploy(
    _fulldenom: string,
    _tokenName: string,
    _tokenSymbol: string,
    _tokenDecimals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _fulldenom,
      _tokenName,
      _tokenSymbol,
      _tokenDecimals,
      overrides || {}
    ) as Promise<
      ExampleNativeERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ExampleNativeERC20__factory {
    return super.connect(runner) as ExampleNativeERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExampleNativeERC20Interface {
    return new Interface(_abi) as ExampleNativeERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ExampleNativeERC20 {
    return new Contract(address, _abi, runner) as unknown as ExampleNativeERC20;
  }
}
